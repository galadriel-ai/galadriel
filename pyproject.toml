[tool.poetry]
name = "galadriel"
version = "0.0.9"
description = ""
authors = [
    "Kaspar Peterson <kaspar@galadriel.com>",
    "Kristjan Peterson <kristjan@galadriel.com>",
    "Kre≈°imir Grofelnik <kresimir@galadriel.com>",
    "Isaac Reis <isaac@galadriel.com>",
    "Maciej Witowski <maciej@galadriel.com>",
    "Han Zhao <han@galadriel.com>",
]
readme = "README.md"

packages = [{ include = "galadriel" }]

[tool.poetry.dependencies]
python = "^3.10"
openai = "^1.55.3"
pynacl = "^1.5.0"
requests = "2.32.3"
click = { version = "^8.1.7"}
python-dotenv = "^1.0.1"
aiohttp = "^3.10.5"
requests-oauthlib = "^2.0.0"
aiofiles = "^22.0.0"
rich = "^13.9.4"
boto3 = "^1.35.0"
python-json-logger = "^2.0.7"
smolagents = "^1.8.1"
composio-langchain = "^0.6.19"
langchain-community = "^0.3.16"
types-aiofiles = "^24.1.0.20241221"
"discord.py" = "^2.4.0"
pyTelegramBotAPI = "^4.26.0"
solana = "^0.35.0"
solders = "^0.21.0,<0.24.0"
jupiter-python-sdk =  "^0.0.2.0"
litellm = {version = "^1.58.2"}
gradio = "^5.15.0"
audioop-lts = { version = "^0.2.1", python = "^3.13" }
cryptography = "^44.0.0"
black = { version = "^24.8.0", optional = true }
mypy = { version = "^1.11.2", optional = true }
py = { version = "^1.11.0", optional = true }
pylint = { version = "^3.2.7", optional = true }
pytest = { version = "^8.3.2", optional = true }
pytest-asyncio = { version = "0.24.0", optional = true }
pytest-mock = { version = "^3.14.0", optional = true }
pytest-cov = { version = "^5.0.0", optional = true }
pytest-xprocess = { version = "^0.18.0", optional = true }
twine = { version = "^5.1.1", optional = true }
build = { version = "^1.2.2", optional = true }
types-requests = { version = "^2.32.0.20241016", optional = true }

[tool.poetry.extras]
dev = ["black", "mypy", "pylint", "pytest", "pytest-asyncio", "pytest-mock", "pytest-xprocess", "twine", "build", "types-requests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
galadriel = "galadriel.cli:galadriel"

[tool.black]
line-length = 120

[tool.mypy]
ignore_missing_imports = true

[tool.pylint]
max-line-length = 120
ignore = ["docker-compose.yml", "*.yaml", "*.json", "*.md"]
ignore-patterns = ["^\\."]  # Ignore hidden files/directories
disable = [
    "missing-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    "too-many-instance-attributes",
    "raise-missing-from",
    "fixme",
    "broad-exception-caught",
    "logging-fstring-interpolation",
    "too-few-public-methods",
    "logging-too-many-args",
    "no-member"
]
max-args = 7
const-rgx = "([A-Z_][A-Z0-9_]*)$"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]